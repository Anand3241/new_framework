{"uuid":"89072342-9ddb-4327-8b70-f5218602ac37","historyId":"6802fbfce82a6ab8d9dde42344b46ff0","fullName":"com.thtechops.qa.automation.testClasses.Demo.navigateToUrl","labels":[{"name":"package","value":"com.thtechops.qa.automation.testClasses.Demo"},{"name":"testClass","value":"com.thtechops.qa.automation.testClasses.Demo"},{"name":"testMethod","value":"navigateToUrl"},{"name":"parentSuite","value":"Login Using Linkdin"},{"name":"suite","value":"Login Using Linkdin"},{"name":"subSuite","value":"com.thtechops.qa.automation.testClasses.Demo"},{"name":"host","value":"anandsr-ltmmgcp.internal.salesforce.com"},{"name":"thread","value":"51791@anandsr-ltmmgcp.internal.salesforce.com.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"}],"links":[],"name":"navigateToUrl","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"stale element reference: stale element not found in the current frame\n  (Session info: chrome=124.0.6367.208)\nFor documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nBuild info: version: '4.12.1', revision: '8e34639b11'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '14.4.1', java.version: '15.0.9'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCommand: [4f3a58ae5605752117fa274831cbf200, executeScript {script=var getShadowElement = function getShadowElement(object,selector) {\tif (object.shadowRoot !=null) {\t\treturn object.shadowRoot.querySelector(selector);\t} else {\t\treturn null;\t}};var getAllShadowElement = function getAllShadowElement(object,selector) {\treturn object.shadowRoot.querySelectorAll(selector);};var getAttribute = function getAttribute(object,attribute) {\treturn object.getAttribute(attribute);};var isVisible = function isVisible(object) {\tvar visible = object.offsetWidth;\tif(visible>0) {\t\treturn true;\t} else {\t\treturn false;\t}};var scrollTo = function scrollTo(object) {\tobject.scrollIntoView({block: \"center\", inline: \"nearest\"});};var getParentElement = function getParentElement(object) {\tif(object.parentNode.nodeName==\"#document-fragment\") {\t\treturn object.parentNode.host;\t} else if(object.nodeName==\"#document-fragment\") {\t\treturn object.host;\t} else {\t\treturn object.parentElement;\t}};var getChildElements = function getChildElements(object) {\telements = null;\tif(object.nodeName==\"#document-fragment\") {\t\telements = object.children;\t} else {\t\telements = object.children;\t}\tif (object.shadowRoot!=null && elements.length==0){\t\telements = object.shadowRoot.children;\t}\treturn elements;};var getSiblingElements = function getSiblingElements(object) {\tif(object.nodeName == \"#document-fragment\") {\t\treturn object.host.children;\t} else {\t\tif(object.parentNode.nodeName==\"#document-fragment\") {\t\t\treturn object.parentNode.children;\t\t} else {\t\t\treturn object.parentElement.children;\t\t}\t}};var getSiblingElement = function getSiblingElement(object, selector) {\tif(object.nodeName==\"#document-fragment\") {\t\treturn object.host.querySelector(selector);\t} else {\t\tif(object.parentNode.nodeName==\"#document-fragment\") {\t\t\treturn object.parentNode.querySelector(selector);\t\t} else {\t\t\treturn object.parentElement.querySelector(selector);\t\t}\t}};var getNextSiblingElement = function getNextSiblingElement(object) {\tif(object.nodeName==\"#document-fragment\") {\t\treturn object.host.firstElementChild.nextElementSibling;\t} else {\t\treturn object.nextElementSibling;\t}};var getPreviousSiblingElement = function getPreviousSiblingElement(object) {\tif(object.nodeName==\"#document-fragment\") {\t\treturn null;\t} else {\t\treturn object.previousElementSibling;\t}};var isChecked = function isChecked(object) {\treturn object.checked;};var isDisabled = function isDisabled(object) {\treturn object.disabled;};var findCheckboxWithLabel = function findCheckboxWithLabel(label, root=document) {\tif(root.nodeName==\"PAPER-CHECKBOX\") {\t\tif(root.childNodes[0].data.trimStart().trimEnd()==label) {\t\t\treturn root;\t\t}\t} else {\t\tlet all_checkbox = getAllObject(\"paper-checkbox\", root);\t\tfor (let checkbox of all_checkbox) {\t\t\tif(checkbox.childNodes[0].data.trimStart().trimEnd()==label) {\t\t\t\treturn checkbox;\t\t\t}\t\t}\t}};var findRadioWithLabel = function findRadioWithLabel(label, root=document) {\tif(root.nodeName==\"PAPER-RADIO-BUTTON\") {\t\tif(root.childNodes[0].data.trimStart().trimEnd()==label) {\t\t\treturn root;\t\t}\t} else {\t\tlet all_radio = getAllObject(\"paper-radio-button\", root);\t\tfor (let radio of all_radio) {\t\t\tif(radio.childNodes[0].data.trimStart().trimEnd()==label) {\t\t\t\treturn radio;\t\t\t}\t\t}\t}};var selectCheckbox = function selectCheckbox(label, root=document) {\tlet checkbox = findCheckboxWithLabel(label, root);\tif(!checkbox.checked) {\t\tchecbox.click();\t}};var selectRadio = function selectRadio(label, root=document) {\tlet radio = findCheckboxWithLabel(label, root);\tif(!radio.checked) {\t\tradio.click();\t}};var selectDropdown = function selectDropdown(label, root=document) {\tif(root.nodeName==\"PAPER-LISTBOX\") {\t\troot.select(label);\t} else {\t\tlet listbox = getAllObject(\"paper-listbox\", root);\t\tlistbox.select(label);\t}};var evaluateAllDeep = function evaluateAllDeep(selector, root) {\tif(root==undefined) {\t\treturn collectAllElementsEvaluateDeep(selector, document);\t} else {\t\treturn collectAllElementsEvaluateDeep(selector, root);\t}};var evaluateDeep = function evaluateDeep(selector, root) {\tif(root==undefined) {\t\treturn collectElementEvaluateDeep(selector, document);\t} else {\t\treturn collectElementEvaluateDeep(selector, root);\t}};var getXPathObject = function getXPathObject(selector, root = document) {\twhile (selector.search(/\\//)!= 0 && selector.search(/\\//)!= -1) {    \tselector = selector.replace(/\\//,'//');    }    while (selector.search(/\\/\\//)==0 && selector.search(/\\/\\//) != -1) {    \tselector = selector.replace(/\\/\\//,'');    }\tsplitedSelectors = selector.split('//');\t\twebElement = root;    for (let index = 0; index < splitedSelectors.length-1; index++) {        webElement = evaluateDeep(splitedSelectors[index], webElement);        if (webElement === undefined) {            throw new ElementNotFoundException(\"Element with XPath \"+splitedSelectors[index]+\" couldn't be found.\");        }    }    webElement = evaluateDeep(splitedSelectors[splitedSelectors.length-1], webElement);    return webElement;};var getXPathAllObject = function getXPathAllObject(selector, root = document) {\twhile (selector.search(/\\//)!= 0 && selector.search(/\\//)!= -1) {    \tselector = selector.replace(/\\//,'//');    }    while (selector.search(/\\/\\//)==0 && selector.search(/\\/\\//) != -1) {    \tselector = selector.replace(/\\/\\//,'');    }\tsplitedSelectors = selector.split('//');    webElement = root;    for (let index = 0; index < splitedSelectors.length-1; index++) {        webElement = evaluateDeep(splitedSelectors[index], webElement);        if (webElement === undefined) {            return null;        }    }    webElement = evaluateAllDeep(splitedSelectors[splitedSelectors.length-1], webElement);    return webElement;};var querySelectorAllDeep = function querySelectorAllDeep(selector, root) {\tif(root==undefined) {\t\treturn _querySelectorDeep(selector, true, document);\t} else {\t\treturn _querySelectorDeep(selector, true, root);\t}};var querySelectorDeep = function querySelectorDeep(selector, root) {\tif(root==undefined) {\t\treturn _querySelectorDeep(selector, false, document);\t} else {\t\treturn _querySelectorDeep(selector, false, root);\t}};var ElementNotFoundException = function ElementNotFoundException(message = \"Not found\") {  this.message = message;  this.name = 'ElementNotFoundException';};var getObject = function getObject(selector, root = document) {    const multiLevelSelectors = splitByCharacterUnlessQuoted(selector, '>');    webElement = root;    for (let index = 0; index < multiLevelSelectors.length-1; index++) {        webElement = querySelectorDeep(multiLevelSelectors[index], webElement);        if (webElement === undefined) {            throw new ElementNotFoundException(\"Element with CSS \"+multiLevelSelectors[index]+\" couldn't be found.\");        }    }    webElement = querySelectorDeep(multiLevelSelectors[multiLevelSelectors.length-1], webElement);    return webElement;};var getAllObject = function getAllObject(selector, root = document) {    const multiLevelSelectors = splitByCharacterUnlessQuoted(selector, '>');    webElement = root;    for (let index = 0; index < multiLevelSelectors.length-1; index++) {        webElement = querySelectorDeep(multiLevelSelectors[index], webElement);        if (webElement === undefined) {            return null;        }    }    webElement = querySelectorAllDeep(multiLevelSelectors[multiLevelSelectors.length-1], webElement);    return webElement;};function _querySelectorDeep(selector, findMany, root) {    let lightElement = root.querySelector(selector);    if (document.head.createShadowRoot || document.head.attachShadow) {        if (!findMany && lightElement) {            return lightElement;        }        const selectionsToMake = splitByCharacterUnlessQuoted(selector, ',');        return selectionsToMake.reduce((acc, minimalSelector) => {            if (!findMany && acc) {                return acc;            }            const splitSelector = splitByCharacterUnlessQuoted(minimalSelector                    .replace(/^\\s+/g, '')                    .replace(/\\s*([>+~]+)\\s*/g, '$1'), ' ')                .filter((entry) => !!entry);            const possibleElementsIndex = splitSelector.length - 1;            const possibleElements = collectAllElementsQuerySelectorDeep(splitSelector[possibleElementsIndex], root);            const findElements = findMatchingElement(splitSelector, possibleElementsIndex, root);            if (findMany) {                acc = acc.concat(possibleElements.filter(findElements));                return acc;            } else {                acc = possibleElements.find(findElements);                return acc;            }        }, findMany ? [] : null);    } else {        if (!findMany) {            return lightElement;        } else {            return root.querySelectorAll(selector);        }    }}function findMatchingElement(splitSelector, possibleElementsIndex, root) {    return (element) => {        let position = possibleElementsIndex;        let parent = element;        let foundElement = false;        while (parent) {            const foundMatch = parent.matches(splitSelector[position]);            if (foundMatch && position === 0) {                foundElement = true;                break;            }            if (foundMatch) {                position--;            }            parent = findParentOrHost(parent, root);        }        return foundElement;    };}function splitByCharacterUnlessQuoted(selector, character) {    return selector.match(/\\\\?.|^$/g).reduce((p, c) => {        if (c === '\"' && !p.sQuote) {            p.quote ^= 1;            p.a[p.a.length - 1] += c;        } else if (c === '\\'' && !p.quote) {            p.sQuote ^= 1;            p.a[p.a.length - 1] += c;        } else if (!p.quote && !p.sQuote && c === character) {            p.a.push('');        } else {            p.a[p.a.length - 1] += c;        }        return p;    }, { a: [''] }).a;}function findParentOrHost(element, root) {    const parentNode = element.parentNode;    return (parentNode && parentNode.host && parentNode.nodeType === 11) ? parentNode.host : parentNode === root ? null : parentNode;}function collectAllElementsQuerySelectorDeep(selector = null, root) {    const allElements = [];    const findAllElements = function(nodes) {        for (let i = 0, el; el = nodes[i]; ++i) {            allElements.push(el);            if (el.shadowRoot) {                findAllElements(el.shadowRoot.querySelectorAll('*'));            }        }    };\tif(root.shadowRoot != null) {\t\tfindAllElements(root.shadowRoot.querySelectorAll('*'));\t}    findAllElements(root.querySelectorAll('*'));    return selector ? allElements.filter(el => el.matches(selector)) : allElements;}function collectAllElementsEvaluateDeep(selector, root) {    var allElements = [];    while (selector.indexOf('/')==0 && selector.search('/') != -1) {    \tselector = selector.replace('/','');    }        allElementsInDocument = collectAllElementsQuerySelectorDeep('*', root);    const findAllElements = function(nodes) {        for (i=0; i<nodes.length; i++) {        \ttest_node = document.createElement('test-node');        \tparent_node = nodes[i].parentNode;        \tif (parent_node != null && parent_node.nodeName != 'HTML' && parent_node.nodeName != '#document') {        \t\tcloned_node = nodes[i].cloneNode();        \t\tif (nodes[i].textContent != \"\") {        \t\t\tcloned_node.textContent = nodes[i].textContent;         \t\t}        \t\ttest_node.append(cloned_node);            \telements = document.evaluate(\".//\"+selector, test_node, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE);            \twhile ((element=elements.iterateNext()) != null) {\t\t\t\t\tif (!allElements.filter((value) => value == nodes[i]).length > 0) {\t\t\t\t\t\tallElements.push(nodes[i]);\t\t\t\t\t}                }        \t}        \telements = document.evaluate(\".//\"+selector, nodes[i], null, XPathResult.ORDERED_NODE_ITERATOR_TYPE);            while ((element=elements.iterateNext()) != null) {            \tif (!allElements.filter((value) => value == element).length > 0) {\t\t\t\t\tallElements.push(element);\t\t\t\t}            }        }    };    findAllElements(allElementsInDocument);    return allElements;}function collectElementEvaluateDeep(selector, root) {    var element = null;    while (selector.indexOf('/')==0 && selector.search('/') != -1) {    \tselector = selector.replace('/','');    }        allElementsInDocument = collectAllElementsQuerySelectorDeep('*', root);    const findAllElements = function(nodes) {        for (i=0; i<nodes.length; i++) {        \ttest_node = document.createElement('test-node');        \tparent_node = nodes[i].parentNode;        \tif (parent_node != null && parent_node.nodeName != 'HTML' && parent_node.nodeName != '#document') {        \t\tcloned_node = nodes[i].cloneNode();        \t\tif (nodes[i].textContent != \"\") {        \t\t\tcloned_node.textContent = nodes[i].textContent;         \t\t}        \t\ttest_node.append(cloned_node);            \telements = document.evaluate('.//'+selector, test_node, null, XPathResult.FIRST_ORDERED_NODE_TYPE);            \tvalue = elements.singleNodeValue;            \tif (value!=null) {            \t\telement = nodes[i];            \t\tbreak;            \t}        \t}        \telements = document.evaluate('.//'+selector, nodes[i], null, XPathResult.FIRST_ORDERED_NODE_TYPE);        \tvalue = elements.singleNodeValue;        \tif (value!=null) {        \t\telement = elements.singleNodeValue;        \t\tbreak;        \t}        }    };    findAllElements(allElementsInDocument);    return element;}return getXPathObject(\"//input[@id='input']\", arguments[0]);, args=[{element-6066-11e4-a52e-4f735466cecf=f.0AB6BECCB921ED81DB513DF7EB47F979.d.317B1DA5FECFE47863B70FB6F5B334A2.e.196}]}]\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 124.0.6367.208, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: /var/folders/v6/pngrr1gn32z...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50776}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://localhost:50776/devtoo..., se:cdpVersion: 124.0.6367.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}\nSession ID: 4f3a58ae5605752117fa274831cbf200","trace":"org.openqa.selenium.StaleElementReferenceException: stale element reference: stale element not found in the current frame\n  (Session info: chrome=124.0.6367.208)\nFor documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nBuild info: version: '4.12.1', revision: '8e34639b11'\nSystem info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '14.4.1', java.version: '15.0.9'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCommand: [4f3a58ae5605752117fa274831cbf200, executeScript {script=var getShadowElement = function getShadowElement(object,selector) {\tif (object.shadowRoot !=null) {\t\treturn object.shadowRoot.querySelector(selector);\t} else {\t\treturn null;\t}};var getAllShadowElement = function getAllShadowElement(object,selector) {\treturn object.shadowRoot.querySelectorAll(selector);};var getAttribute = function getAttribute(object,attribute) {\treturn object.getAttribute(attribute);};var isVisible = function isVisible(object) {\tvar visible = object.offsetWidth;\tif(visible>0) {\t\treturn true;\t} else {\t\treturn false;\t}};var scrollTo = function scrollTo(object) {\tobject.scrollIntoView({block: \"center\", inline: \"nearest\"});};var getParentElement = function getParentElement(object) {\tif(object.parentNode.nodeName==\"#document-fragment\") {\t\treturn object.parentNode.host;\t} else if(object.nodeName==\"#document-fragment\") {\t\treturn object.host;\t} else {\t\treturn object.parentElement;\t}};var getChildElements = function getChildElements(object) {\telements = null;\tif(object.nodeName==\"#document-fragment\") {\t\telements = object.children;\t} else {\t\telements = object.children;\t}\tif (object.shadowRoot!=null && elements.length==0){\t\telements = object.shadowRoot.children;\t}\treturn elements;};var getSiblingElements = function getSiblingElements(object) {\tif(object.nodeName == \"#document-fragment\") {\t\treturn object.host.children;\t} else {\t\tif(object.parentNode.nodeName==\"#document-fragment\") {\t\t\treturn object.parentNode.children;\t\t} else {\t\t\treturn object.parentElement.children;\t\t}\t}};var getSiblingElement = function getSiblingElement(object, selector) {\tif(object.nodeName==\"#document-fragment\") {\t\treturn object.host.querySelector(selector);\t} else {\t\tif(object.parentNode.nodeName==\"#document-fragment\") {\t\t\treturn object.parentNode.querySelector(selector);\t\t} else {\t\t\treturn object.parentElement.querySelector(selector);\t\t}\t}};var getNextSiblingElement = function getNextSiblingElement(object) {\tif(object.nodeName==\"#document-fragment\") {\t\treturn object.host.firstElementChild.nextElementSibling;\t} else {\t\treturn object.nextElementSibling;\t}};var getPreviousSiblingElement = function getPreviousSiblingElement(object) {\tif(object.nodeName==\"#document-fragment\") {\t\treturn null;\t} else {\t\treturn object.previousElementSibling;\t}};var isChecked = function isChecked(object) {\treturn object.checked;};var isDisabled = function isDisabled(object) {\treturn object.disabled;};var findCheckboxWithLabel = function findCheckboxWithLabel(label, root=document) {\tif(root.nodeName==\"PAPER-CHECKBOX\") {\t\tif(root.childNodes[0].data.trimStart().trimEnd()==label) {\t\t\treturn root;\t\t}\t} else {\t\tlet all_checkbox = getAllObject(\"paper-checkbox\", root);\t\tfor (let checkbox of all_checkbox) {\t\t\tif(checkbox.childNodes[0].data.trimStart().trimEnd()==label) {\t\t\t\treturn checkbox;\t\t\t}\t\t}\t}};var findRadioWithLabel = function findRadioWithLabel(label, root=document) {\tif(root.nodeName==\"PAPER-RADIO-BUTTON\") {\t\tif(root.childNodes[0].data.trimStart().trimEnd()==label) {\t\t\treturn root;\t\t}\t} else {\t\tlet all_radio = getAllObject(\"paper-radio-button\", root);\t\tfor (let radio of all_radio) {\t\t\tif(radio.childNodes[0].data.trimStart().trimEnd()==label) {\t\t\t\treturn radio;\t\t\t}\t\t}\t}};var selectCheckbox = function selectCheckbox(label, root=document) {\tlet checkbox = findCheckboxWithLabel(label, root);\tif(!checkbox.checked) {\t\tchecbox.click();\t}};var selectRadio = function selectRadio(label, root=document) {\tlet radio = findCheckboxWithLabel(label, root);\tif(!radio.checked) {\t\tradio.click();\t}};var selectDropdown = function selectDropdown(label, root=document) {\tif(root.nodeName==\"PAPER-LISTBOX\") {\t\troot.select(label);\t} else {\t\tlet listbox = getAllObject(\"paper-listbox\", root);\t\tlistbox.select(label);\t}};var evaluateAllDeep = function evaluateAllDeep(selector, root) {\tif(root==undefined) {\t\treturn collectAllElementsEvaluateDeep(selector, document);\t} else {\t\treturn collectAllElementsEvaluateDeep(selector, root);\t}};var evaluateDeep = function evaluateDeep(selector, root) {\tif(root==undefined) {\t\treturn collectElementEvaluateDeep(selector, document);\t} else {\t\treturn collectElementEvaluateDeep(selector, root);\t}};var getXPathObject = function getXPathObject(selector, root = document) {\twhile (selector.search(/\\//)!= 0 && selector.search(/\\//)!= -1) {    \tselector = selector.replace(/\\//,'//');    }    while (selector.search(/\\/\\//)==0 && selector.search(/\\/\\//) != -1) {    \tselector = selector.replace(/\\/\\//,'');    }\tsplitedSelectors = selector.split('//');\t\twebElement = root;    for (let index = 0; index < splitedSelectors.length-1; index++) {        webElement = evaluateDeep(splitedSelectors[index], webElement);        if (webElement === undefined) {            throw new ElementNotFoundException(\"Element with XPath \"+splitedSelectors[index]+\" couldn't be found.\");        }    }    webElement = evaluateDeep(splitedSelectors[splitedSelectors.length-1], webElement);    return webElement;};var getXPathAllObject = function getXPathAllObject(selector, root = document) {\twhile (selector.search(/\\//)!= 0 && selector.search(/\\//)!= -1) {    \tselector = selector.replace(/\\//,'//');    }    while (selector.search(/\\/\\//)==0 && selector.search(/\\/\\//) != -1) {    \tselector = selector.replace(/\\/\\//,'');    }\tsplitedSelectors = selector.split('//');    webElement = root;    for (let index = 0; index < splitedSelectors.length-1; index++) {        webElement = evaluateDeep(splitedSelectors[index], webElement);        if (webElement === undefined) {            return null;        }    }    webElement = evaluateAllDeep(splitedSelectors[splitedSelectors.length-1], webElement);    return webElement;};var querySelectorAllDeep = function querySelectorAllDeep(selector, root) {\tif(root==undefined) {\t\treturn _querySelectorDeep(selector, true, document);\t} else {\t\treturn _querySelectorDeep(selector, true, root);\t}};var querySelectorDeep = function querySelectorDeep(selector, root) {\tif(root==undefined) {\t\treturn _querySelectorDeep(selector, false, document);\t} else {\t\treturn _querySelectorDeep(selector, false, root);\t}};var ElementNotFoundException = function ElementNotFoundException(message = \"Not found\") {  this.message = message;  this.name = 'ElementNotFoundException';};var getObject = function getObject(selector, root = document) {    const multiLevelSelectors = splitByCharacterUnlessQuoted(selector, '>');    webElement = root;    for (let index = 0; index < multiLevelSelectors.length-1; index++) {        webElement = querySelectorDeep(multiLevelSelectors[index], webElement);        if (webElement === undefined) {            throw new ElementNotFoundException(\"Element with CSS \"+multiLevelSelectors[index]+\" couldn't be found.\");        }    }    webElement = querySelectorDeep(multiLevelSelectors[multiLevelSelectors.length-1], webElement);    return webElement;};var getAllObject = function getAllObject(selector, root = document) {    const multiLevelSelectors = splitByCharacterUnlessQuoted(selector, '>');    webElement = root;    for (let index = 0; index < multiLevelSelectors.length-1; index++) {        webElement = querySelectorDeep(multiLevelSelectors[index], webElement);        if (webElement === undefined) {            return null;        }    }    webElement = querySelectorAllDeep(multiLevelSelectors[multiLevelSelectors.length-1], webElement);    return webElement;};function _querySelectorDeep(selector, findMany, root) {    let lightElement = root.querySelector(selector);    if (document.head.createShadowRoot || document.head.attachShadow) {        if (!findMany && lightElement) {            return lightElement;        }        const selectionsToMake = splitByCharacterUnlessQuoted(selector, ',');        return selectionsToMake.reduce((acc, minimalSelector) => {            if (!findMany && acc) {                return acc;            }            const splitSelector = splitByCharacterUnlessQuoted(minimalSelector                    .replace(/^\\s+/g, '')                    .replace(/\\s*([>+~]+)\\s*/g, '$1'), ' ')                .filter((entry) => !!entry);            const possibleElementsIndex = splitSelector.length - 1;            const possibleElements = collectAllElementsQuerySelectorDeep(splitSelector[possibleElementsIndex], root);            const findElements = findMatchingElement(splitSelector, possibleElementsIndex, root);            if (findMany) {                acc = acc.concat(possibleElements.filter(findElements));                return acc;            } else {                acc = possibleElements.find(findElements);                return acc;            }        }, findMany ? [] : null);    } else {        if (!findMany) {            return lightElement;        } else {            return root.querySelectorAll(selector);        }    }}function findMatchingElement(splitSelector, possibleElementsIndex, root) {    return (element) => {        let position = possibleElementsIndex;        let parent = element;        let foundElement = false;        while (parent) {            const foundMatch = parent.matches(splitSelector[position]);            if (foundMatch && position === 0) {                foundElement = true;                break;            }            if (foundMatch) {                position--;            }            parent = findParentOrHost(parent, root);        }        return foundElement;    };}function splitByCharacterUnlessQuoted(selector, character) {    return selector.match(/\\\\?.|^$/g).reduce((p, c) => {        if (c === '\"' && !p.sQuote) {            p.quote ^= 1;            p.a[p.a.length - 1] += c;        } else if (c === '\\'' && !p.quote) {            p.sQuote ^= 1;            p.a[p.a.length - 1] += c;        } else if (!p.quote && !p.sQuote && c === character) {            p.a.push('');        } else {            p.a[p.a.length - 1] += c;        }        return p;    }, { a: [''] }).a;}function findParentOrHost(element, root) {    const parentNode = element.parentNode;    return (parentNode && parentNode.host && parentNode.nodeType === 11) ? parentNode.host : parentNode === root ? null : parentNode;}function collectAllElementsQuerySelectorDeep(selector = null, root) {    const allElements = [];    const findAllElements = function(nodes) {        for (let i = 0, el; el = nodes[i]; ++i) {            allElements.push(el);            if (el.shadowRoot) {                findAllElements(el.shadowRoot.querySelectorAll('*'));            }        }    };\tif(root.shadowRoot != null) {\t\tfindAllElements(root.shadowRoot.querySelectorAll('*'));\t}    findAllElements(root.querySelectorAll('*'));    return selector ? allElements.filter(el => el.matches(selector)) : allElements;}function collectAllElementsEvaluateDeep(selector, root) {    var allElements = [];    while (selector.indexOf('/')==0 && selector.search('/') != -1) {    \tselector = selector.replace('/','');    }        allElementsInDocument = collectAllElementsQuerySelectorDeep('*', root);    const findAllElements = function(nodes) {        for (i=0; i<nodes.length; i++) {        \ttest_node = document.createElement('test-node');        \tparent_node = nodes[i].parentNode;        \tif (parent_node != null && parent_node.nodeName != 'HTML' && parent_node.nodeName != '#document') {        \t\tcloned_node = nodes[i].cloneNode();        \t\tif (nodes[i].textContent != \"\") {        \t\t\tcloned_node.textContent = nodes[i].textContent;         \t\t}        \t\ttest_node.append(cloned_node);            \telements = document.evaluate(\".//\"+selector, test_node, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE);            \twhile ((element=elements.iterateNext()) != null) {\t\t\t\t\tif (!allElements.filter((value) => value == nodes[i]).length > 0) {\t\t\t\t\t\tallElements.push(nodes[i]);\t\t\t\t\t}                }        \t}        \telements = document.evaluate(\".//\"+selector, nodes[i], null, XPathResult.ORDERED_NODE_ITERATOR_TYPE);            while ((element=elements.iterateNext()) != null) {            \tif (!allElements.filter((value) => value == element).length > 0) {\t\t\t\t\tallElements.push(element);\t\t\t\t}            }        }    };    findAllElements(allElementsInDocument);    return allElements;}function collectElementEvaluateDeep(selector, root) {    var element = null;    while (selector.indexOf('/')==0 && selector.search('/') != -1) {    \tselector = selector.replace('/','');    }        allElementsInDocument = collectAllElementsQuerySelectorDeep('*', root);    const findAllElements = function(nodes) {        for (i=0; i<nodes.length; i++) {        \ttest_node = document.createElement('test-node');        \tparent_node = nodes[i].parentNode;        \tif (parent_node != null && parent_node.nodeName != 'HTML' && parent_node.nodeName != '#document') {        \t\tcloned_node = nodes[i].cloneNode();        \t\tif (nodes[i].textContent != \"\") {        \t\t\tcloned_node.textContent = nodes[i].textContent;         \t\t}        \t\ttest_node.append(cloned_node);            \telements = document.evaluate('.//'+selector, test_node, null, XPathResult.FIRST_ORDERED_NODE_TYPE);            \tvalue = elements.singleNodeValue;            \tif (value!=null) {            \t\telement = nodes[i];            \t\tbreak;            \t}        \t}        \telements = document.evaluate('.//'+selector, nodes[i], null, XPathResult.FIRST_ORDERED_NODE_TYPE);        \tvalue = elements.singleNodeValue;        \tif (value!=null) {        \t\telement = elements.singleNodeValue;        \t\tbreak;        \t}        }    };    findAllElements(allElementsInDocument);    return element;}return getXPathObject(\"//input[@id='input']\", arguments[0]);, args=[{element-6066-11e4-a52e-4f735466cecf=f.0AB6BECCB921ED81DB513DF7EB47F979.d.317B1DA5FECFE47863B70FB6F5B334A2.e.196}]}]\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 124.0.6367.208, chrome: {chromedriverVersion: 124.0.6367.207 (a9001a6e39f..., userDataDir: /var/folders/v6/pngrr1gn32z...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50776}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: mac, proxy: Proxy(), se:cdp: ws://localhost:50776/devtoo..., se:cdpVersion: 124.0.6367.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}\nSession ID: 4f3a58ae5605752117fa274831cbf200\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)\n\tat org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:467)\n\tat io.github.sukgu.Shadow.injectShadowExecuter(Shadow.java:90)\n\tat io.github.sukgu.Shadow.executerGetObject(Shadow.java:115)\n\tat io.github.sukgu.Shadow.elementByXPath(Shadow.java:425)\n\tat io.github.sukgu.Shadow.lambda$findElementByXPath$1(Shadow.java:449)\n\tat java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4203)\n\tat io.github.sukgu.Shadow.findElementByXPath(Shadow.java:448)\n\tat com.thtechops.qa.automation.pageObjects.SignUp_Profile_page.see_classes(SignUp_Profile_page.java:941)\n\tat com.thtechops.qa.automation.testClasses.Demo.navigateToUrl(Demo.java:78)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:848)\n\tat org.testng.TestRunner.run(TestRunner.java:621)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:443)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:336)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1275)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1200)\n\tat org.testng.TestNG.runSuites(TestNG.java:1114)\n\tat org.testng.TestNG.run(TestNG.java:1082)\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1716205565884,"stop":1716205603434}